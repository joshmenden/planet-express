// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: planet_express_service.proto

package planetexpress

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_planet_express_service_proto protoreflect.FileDescriptor

var file_planet_express_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x0e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63,
	0x72, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x32, 0xc4, 0x02, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x77, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_planet_express_service_proto_goTypes = []interface{}{
	(*empty.Empty)(nil),            // 0: google.protobuf.Empty
	(*GetDeliveryRequest)(nil),     // 1: planetexpress.GetDeliveryRequest
	(*GetShipResponse)(nil),        // 2: planetexpress.GetShipResponse
	(*GetCrewResponse)(nil),        // 3: planetexpress.GetCrewResponse
	(*ListDeliveriesResponse)(nil), // 4: planetexpress.ListDeliveriesResponse
	(*GetDeliveryResponse)(nil),    // 5: planetexpress.GetDeliveryResponse
}
var file_planet_express_service_proto_depIdxs = []int32{
	0, // 0: planetexpress.PlanetExpress.GetShip:input_type -> google.protobuf.Empty
	0, // 1: planetexpress.PlanetExpress.GetCrew:input_type -> google.protobuf.Empty
	0, // 2: planetexpress.PlanetExpress.ListDeliveries:input_type -> google.protobuf.Empty
	1, // 3: planetexpress.PlanetExpress.GetDelivery:input_type -> planetexpress.GetDeliveryRequest
	2, // 4: planetexpress.PlanetExpress.GetShip:output_type -> planetexpress.GetShipResponse
	3, // 5: planetexpress.PlanetExpress.GetCrew:output_type -> planetexpress.GetCrewResponse
	4, // 6: planetexpress.PlanetExpress.ListDeliveries:output_type -> planetexpress.ListDeliveriesResponse
	5, // 7: planetexpress.PlanetExpress.GetDelivery:output_type -> planetexpress.GetDeliveryResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_planet_express_service_proto_init() }
func file_planet_express_service_proto_init() {
	if File_planet_express_service_proto != nil {
		return
	}
	file_delivery_proto_init()
	file_crew_proto_init()
	file_ship_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_planet_express_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_planet_express_service_proto_goTypes,
		DependencyIndexes: file_planet_express_service_proto_depIdxs,
	}.Build()
	File_planet_express_service_proto = out.File
	file_planet_express_service_proto_rawDesc = nil
	file_planet_express_service_proto_goTypes = nil
	file_planet_express_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlanetExpressClient is the client API for PlanetExpress service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlanetExpressClient interface {
	GetShip(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetShipResponse, error)
	GetCrew(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetCrewResponse, error)
	ListDeliveries(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListDeliveriesResponse, error)
	GetDelivery(ctx context.Context, in *GetDeliveryRequest, opts ...grpc.CallOption) (*GetDeliveryResponse, error)
}

type planetExpressClient struct {
	cc grpc.ClientConnInterface
}

func NewPlanetExpressClient(cc grpc.ClientConnInterface) PlanetExpressClient {
	return &planetExpressClient{cc}
}

func (c *planetExpressClient) GetShip(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetShipResponse, error) {
	out := new(GetShipResponse)
	err := c.cc.Invoke(ctx, "/planetexpress.PlanetExpress/GetShip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planetExpressClient) GetCrew(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetCrewResponse, error) {
	out := new(GetCrewResponse)
	err := c.cc.Invoke(ctx, "/planetexpress.PlanetExpress/GetCrew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planetExpressClient) ListDeliveries(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListDeliveriesResponse, error) {
	out := new(ListDeliveriesResponse)
	err := c.cc.Invoke(ctx, "/planetexpress.PlanetExpress/ListDeliveries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planetExpressClient) GetDelivery(ctx context.Context, in *GetDeliveryRequest, opts ...grpc.CallOption) (*GetDeliveryResponse, error) {
	out := new(GetDeliveryResponse)
	err := c.cc.Invoke(ctx, "/planetexpress.PlanetExpress/GetDelivery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlanetExpressServer is the server API for PlanetExpress service.
type PlanetExpressServer interface {
	GetShip(context.Context, *empty.Empty) (*GetShipResponse, error)
	GetCrew(context.Context, *empty.Empty) (*GetCrewResponse, error)
	ListDeliveries(context.Context, *empty.Empty) (*ListDeliveriesResponse, error)
	GetDelivery(context.Context, *GetDeliveryRequest) (*GetDeliveryResponse, error)
}

// UnimplementedPlanetExpressServer can be embedded to have forward compatible implementations.
type UnimplementedPlanetExpressServer struct {
}

func (*UnimplementedPlanetExpressServer) GetShip(context.Context, *empty.Empty) (*GetShipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShip not implemented")
}
func (*UnimplementedPlanetExpressServer) GetCrew(context.Context, *empty.Empty) (*GetCrewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCrew not implemented")
}
func (*UnimplementedPlanetExpressServer) ListDeliveries(context.Context, *empty.Empty) (*ListDeliveriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeliveries not implemented")
}
func (*UnimplementedPlanetExpressServer) GetDelivery(context.Context, *GetDeliveryRequest) (*GetDeliveryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDelivery not implemented")
}

func RegisterPlanetExpressServer(s *grpc.Server, srv PlanetExpressServer) {
	s.RegisterService(&_PlanetExpress_serviceDesc, srv)
}

func _PlanetExpress_GetShip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanetExpressServer).GetShip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planetexpress.PlanetExpress/GetShip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanetExpressServer).GetShip(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlanetExpress_GetCrew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanetExpressServer).GetCrew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planetexpress.PlanetExpress/GetCrew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanetExpressServer).GetCrew(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlanetExpress_ListDeliveries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanetExpressServer).ListDeliveries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planetexpress.PlanetExpress/ListDeliveries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanetExpressServer).ListDeliveries(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlanetExpress_GetDelivery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanetExpressServer).GetDelivery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/planetexpress.PlanetExpress/GetDelivery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanetExpressServer).GetDelivery(ctx, req.(*GetDeliveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlanetExpress_serviceDesc = grpc.ServiceDesc{
	ServiceName: "planetexpress.PlanetExpress",
	HandlerType: (*PlanetExpressServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetShip",
			Handler:    _PlanetExpress_GetShip_Handler,
		},
		{
			MethodName: "GetCrew",
			Handler:    _PlanetExpress_GetCrew_Handler,
		},
		{
			MethodName: "ListDeliveries",
			Handler:    _PlanetExpress_ListDeliveries_Handler,
		},
		{
			MethodName: "GetDelivery",
			Handler:    _PlanetExpress_GetDelivery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "planet_express_service.proto",
}
